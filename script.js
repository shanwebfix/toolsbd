 // io
  document.addEventListener("contextmenu", (e) => e.preventDefault());

  // io
  document.addEventListener("keydown", function (e) {
    if (
      e.key === "F12" ||
      (e.ctrlKey && e.shiftKey && e.key === "I") ||
      (e.ctrlKey && e.key === "U")
    ) {
      e.preventDefault();
    }
  });


document.addEventListener('contextmenu', function(e) {
  e.preventDefault();
});

// Disable text selection
document.addEventListener('selectstart', function(e) {
  e.preventDefault();
});

// Disable drag (for images & content)
document.addEventListener('dragstart', function(e) {
  e.preventDefault();
});

// Optional: Prevent saving images via right-click or dragging
document.querySelectorAll('img').forEach(function(img) {
  img.setAttribute('draggable', 'false');
  img.addEventListener('contextmenu', function(e) {
    e.preventDefault();
  });
});



// üì¶ ‡¶á‡¶â‡¶ü‡¶ø‡¶≤‡¶ø‡¶ü‡¶ø ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®: ‡¶á‡¶Ç‡¶∞‡ßá‡¶ú‡¶ø ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‚Üí ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ
function banglaDigit(num) {
  const en = '0123456789'.split('');
  const bn = '‡ß¶‡ßß‡ß®‡ß©‡ß™‡ß´‡ß¨‡ß≠‡ßÆ‡ßØ'.split('');
  return num.toString().split('').map(d => en.includes(d) ? bn[en.indexOf(d)] : d).join('');
}

// üïê ‡¶ü‡¶æ‡¶á‡¶Æ ‡¶ï‡¶®‡¶≠‡¶æ‡¶∞‡ßç‡¶ü‡¶æ‡¶∞: HH:MM ‚Üí ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ AM/PM ‡¶∏‡¶π
function formatTimeToBangla(timeStr) {
  let [h, m] = timeStr.split(':').map(Number);
  const ampm = h >= 12 ? '‡¶™‡¶ø.‡¶è‡¶Æ' : '‡¶è.‡¶è‡¶Æ';
  h = h % 12 || 12;
  return `${banglaDigit(h)}:${banglaDigit(m)} ${ampm}`;
}

// üìç ‡¶≤‡ßã‡¶ï‡ßá‡¶∂‡¶® ‡¶®‡¶æ‡¶Æ ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶è‡¶¨‡¶Ç ‡¶†‡¶ø‡¶ï‡¶æ‡¶®‡¶æ‡¶∏‡¶π ‡¶´‡ßá‡¶∞‡¶§ ‡¶¶‡ßá‡¶ì‡ßü‡¶æ
async function reverseGeocode(lat, lon) {
  const url = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lon}&zoom=10&addressdetails=1`;
  try {
    const res = await fetch(url);
    const data = await res.json();
    const address = data.address;
    const locationName =
      address.hamlet ||
      address.suburb ||
      address.village ||
      address.town ||
      address.county ||
      address.city ||
      address.district ||
      address.state ||
      "‡¶Ö‡¶ú‡¶æ‡¶®‡¶æ";

    const full = [
      address.hamlet,
      address.suburb,
      address.village,
      address.town,
      address.county,
      address.district,
      address.state
    ]
      .filter(Boolean)
      .join(", ");

    return { name: locationName, full };
  } catch {
    return { name: "‡¶Ö‡¶ú‡¶æ‡¶®‡¶æ", full: "Bangladesh" };
  }
}

// üïå ‡¶®‡¶æ‡¶Æ‡¶æ‡¶ú‡ßá‡¶∞ ‡¶∏‡¶Æ‡ßü ‡¶≤‡ßã‡¶° (‡¶∏‡¶†‡¶ø‡¶ï location ‡¶≠‡¶ø‡¶§‡ßç‡¶§‡¶ø‡¶ï)
async function getPrayerTimes(lat, lon, displayName) {
  const url = `https://api.aladhan.com/v1/timings?latitude=${lat}&longitude=${lon}&method=2&school=1`;
  try {
    const res = await fetch(url);
    const data = await res.json();
    const t = data.data.timings;

    document.getElementById("location").textContent = `üìç ‡¶≤‡ßã‡¶ï‡ßá‡¶∂‡¶®: ${displayName}`;

    const prayers = [
      { name: "üïã ‡¶´‡¶ú‡¶∞", time: t.Fajr },
      { name: "üåÖ ‡¶∏‡ßÇ‡¶∞‡ßç‡¶Ø‡ßã‡¶¶‡ßü", time: t.Sunrise },
      { name: "üïå ‡¶Ø‡ßã‡¶π‡¶∞", time: t.Dhuhr },
      { name: "üïí ‡¶Ü‡¶∏‡¶∞", time: t.Asr },
      { name: "üåá ‡¶Æ‡¶æ‡¶ó‡¶∞‡¶ø‡¶¨", time: t.Maghrib },
      { name: "üåô ‡¶è‡¶∂‡¶æ", time: t.Isha }
    ];

    document.getElementById("prayer-list").innerHTML = prayers.map(p => `
      <p>${p.name} ‚Äî ${formatTimeToBangla(p.time)}</p>
    `).join('');
  } catch (err) {
    document.getElementById("prayer-list").innerHTML = `<p>‚ùå ‡¶®‡¶æ‡¶Æ‡¶æ‡¶ú‡ßá‡¶∞ ‡¶∏‡¶Æ‡ßü ‡¶≤‡ßã‡¶° ‡¶¨‡ßç‡¶Ø‡¶∞‡ßç‡¶•</p>`;
  }
}

// üß≠ ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶≤‡ßã‡¶ï‡ßá‡¶∂‡¶® ‡¶ß‡¶∞‡ßã ‡¶è‡¶¨‡¶Ç ‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡ßã
function getUserLocation() {
  if (!navigator.geolocation) {
    document.getElementById("location").textContent = "‚ö†Ô∏è ‡¶≤‡ßã‡¶ï‡ßá‡¶∂‡¶® ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø";
    return;
  }

  navigator.geolocation.getCurrentPosition(async pos => {
    const lat = pos.coords.latitude;
    const lon = pos.coords.longitude;
    const location = await reverseGeocode(lat, lon);
    await getPrayerTimes(lat, lon, location.full);
  }, () => {
    const fallbackLat = 23.8103;
    const fallbackLon = 90.4125;
    getPrayerTimes(fallbackLat, fallbackLon, "‡¶¢‡¶æ‡¶ï‡¶æ");
    document.getElementById("location").textContent = `üìç ‡¶≤‡ßã‡¶ï‡ßá‡¶∂‡¶®: ‡¶¢‡¶æ‡¶ï‡¶æ`;
  });
}

// üöÄ ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡ßã
getUserLocation();













// English Date
const banglaNumbers = ["‡ß¶", "‡ßß", "‡ß®", "‡ß©", "‡ß™", "‡ß´", "‡ß¨", "‡ß≠", "‡ßÆ", "‡ßØ"];
const banglaMonths = ["‡¶ú‡¶æ‡¶®‡ßÅ‡¶Ø‡¶º‡¶æ‡¶∞‡¶ø", "‡¶´‡ßá‡¶¨‡ßç‡¶∞‡ßÅ‡¶Ø‡¶º‡¶æ‡¶∞‡¶ø", "‡¶Æ‡¶æ‡¶∞‡ßç‡¶ö", "‡¶è‡¶™‡ßç‡¶∞‡¶ø‡¶≤", "‡¶Æ‡ßá", "‡¶ú‡ßÅ‡¶®", "‡¶ú‡ßÅ‡¶≤‡¶æ‡¶á", "‡¶Ü‡¶ó‡¶∏‡ßç‡¶ü", "‡¶∏‡ßá‡¶™‡ßç‡¶ü‡ßá‡¶Æ‡ßç‡¶¨‡¶∞", "‡¶Ö‡¶ï‡ßç‡¶ü‡ßã‡¶¨‡¶∞", "‡¶®‡¶≠‡ßá‡¶Æ‡ßç‡¶¨‡¶∞", "‡¶°‡¶ø‡¶∏‡ßá‡¶Æ‡ßç‡¶¨‡¶∞"];
const banglaWeekdays = ["‡¶∞‡¶¨‡¶ø‡¶¨‡¶æ‡¶∞", "‡¶∏‡ßã‡¶Æ‡¶¨‡¶æ‡¶∞", "‡¶Æ‡¶ô‡ßç‡¶ó‡¶≤‡¶¨‡¶æ‡¶∞", "‡¶¨‡ßÅ‡¶ß‡¶¨‡¶æ‡¶∞", "‡¶¨‡ßÉ‡¶π‡¶∏‡ßç‡¶™‡¶§‡¶ø‡¶¨‡¶æ‡¶∞", "‡¶∂‡ßÅ‡¶ï‡ßç‡¶∞‡¶¨‡¶æ‡¶∞", "‡¶∂‡¶®‡¶ø‡¶¨‡¶æ‡¶∞"];

// ‡¶á‡¶Ç‡¶∞‡ßá‡¶ú‡¶ø ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ, ‡¶Ü‡¶∞‡¶¨‡¶ø ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‚Üí ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶ï‡¶®‡¶≠‡¶æ‡¶∞‡ßç‡¶ü‡¶æ‡¶∞
function convertToBanglaNumber(str) {
  const en = "0123456789";
  const ar = "Ÿ†Ÿ°Ÿ¢Ÿ£Ÿ§Ÿ•Ÿ¶ŸßŸ®Ÿ©";
  return str.toString().split('').map(char => {
    if (en.includes(char)) return banglaNumbers[parseInt(char)];
    if (ar.includes(char)) return banglaNumbers[ar.indexOf(char)];
    return char;
  }).join('');
}

// ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ
const today = new Date();
const bdDay = convertToBanglaNumber(today.getDate());
const bdMonth = banglaMonths[today.getMonth()];
const bdYear = convertToBanglaNumber(today.getFullYear());
const bdWeekday = banglaWeekdays[today.getDay()];
document.getElementById("bangla-date").innerText = `${bdWeekday}, ${bdDay} ${bdMonth}, ${bdYear}`;

// ‡¶á‡¶Ç‡¶∞‡ßá‡¶ú‡¶ø ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ
const englishDate = today.toLocaleDateString("en-GB", {
  weekday: "long",
  day: "numeric",
  month: "long",
  year: "numeric"
});
document.getElementById("english-date").innerText = englishDate;

// ‡¶á‡¶∏‡¶≤‡¶æ‡¶Æ‡¶ø‡¶ï ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ‡ßü
const islamicFormatter = new Intl.DateTimeFormat("ar-SA-u-ca-islamic", {
  day: "numeric",
  month: "long",
  year: "numeric"
});
const parts = islamicFormatter.formatToParts(today);

// ‡¶Ü‡¶∞‡¶¨‡¶ø ‡¶Æ‡¶æ‡¶∏ ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡ßü
const arabicToBanglaMonth = {
  "ŸÖÿ≠ÿ±ŸÖ": "‡¶Æ‡ßÅ‡¶π‡¶æ‡¶∞‡¶∞‡¶Æ",
  "ÿµŸÅÿ±": "‡¶∏‡¶´‡¶∞",
  "ÿ±ÿ®Ÿäÿπ ÿßŸÑÿ£ŸàŸÑ": "‡¶∞‡¶¨‡¶ø‡¶â‡¶≤ ‡¶Ü‡¶â‡¶Ø‡¶º‡¶æ‡¶≤",
  "ÿ±ÿ®Ÿäÿπ ÿßŸÑÿ¢ÿÆÿ±": "‡¶∞‡¶¨‡¶ø‡¶â‡¶∏ ‡¶∏‡¶æ‡¶®‡¶ø",
  "ÿ¨ŸÖÿßÿØŸâ ÿßŸÑÿ£ŸàŸÑŸâ": "‡¶ú‡ßÅ‡¶Æ‡¶æ‡¶¶‡¶æ‡¶≤ ‡¶â‡¶≤‡¶æ",
  "ÿ¨ŸÖÿßÿØŸâ ÿßŸÑÿ¢ÿÆÿ±ÿ©": "‡¶ú‡ßÅ‡¶Æ‡¶æ‡¶¶‡¶æ‡¶≤ ‡¶∏‡¶æ‡¶®‡¶ø",
  "ÿ±ÿ¨ÿ®": "‡¶∞‡¶ú‡¶¨",
  "ÿ¥ÿπÿ®ÿßŸÜ": "‡¶∂‡¶æ‡¶¨‡¶æ‡¶®",
  "ÿ±ŸÖÿ∂ÿßŸÜ": "‡¶∞‡¶Æ‡¶ú‡¶æ‡¶®",
  "ÿ¥ŸàÿßŸÑ": "‡¶∂‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ‡¶≤",
  "ÿ∞Ÿà ÿßŸÑŸÇÿπÿØÿ©": "‡¶ú‡ßç‡¶¨‡¶ø‡¶≤‡¶ï‡¶¶",
  "ÿ∞Ÿà ÿßŸÑÿ≠ÿ¨ÿ©": "‡¶ú‡ßç‡¶¨‡¶ø‡¶≤‡¶π‡¶ú‡ßç‡¶ú"
};

let islDay = "", islMonth = "", islYear = "";

parts.forEach(part => {
  if (part.type === "day") islDay = convertToBanglaNumber(part.value);
  if (part.type === "month") islMonth = arabicToBanglaMonth[part.value] || part.value;
  if (part.type === "year") islYear = convertToBanglaNumber(part.value);
});

document.getElementById("arabic-date").innerText = `${islDay} ${islMonth} ${islYear}`;

















// ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶∏‡¶æ‡¶á‡¶ü‡ßá‡¶∞ ‡¶ï‡¶®‡ßç‡¶ü‡ßá‡¶®‡ßç‡¶ü (search data) ‚Äî ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶ü‡¶æ‡¶á‡¶ü‡ßá‡¶≤ + URL + ‡¶°‡ßá‡¶∏‡¶ï‡ßç‡¶∞‡¶ø‡¶™‡¶∂‡¶® ‡¶¶‡¶ø‡¶§‡ßá ‡¶π‡¶¨‡ßá
const siteContent = [
  {
    title: "Islamic Tools",
    url: "islamic/",
    desc: "‡¶á‡¶∏‡¶≤‡¶æ‡¶Æ‡¶ø‡¶ï ‡¶ï‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶®‡ßç‡¶°‡¶æ‡¶∞, ‡¶®‡¶æ‡¶Æ‡¶æ‡¶ú‡ßá‡¶∞ ‡¶∏‡¶Æ‡¶Ø‡¶º‡¶∏‡ßÇ‡¶ö‡¶ø, ‡¶ï‡¶ø‡¶¨‡¶≤‡¶æ ‡¶¶‡¶ø‡¶ï ‡¶®‡¶ø‡¶∞‡ßç‡¶£‡¶Ø‡¶º ‡¶∏‡¶π ‡¶®‡¶æ‡¶®‡¶æ ‡¶á‡¶∏‡¶≤‡¶æ‡¶Æ‡¶ø‡¶ï ‡¶ü‡ßÅ‡¶≤‡•§",
  },
  {
    title: "Daily Use Tools",
    url: "daily-use-tools/",
    desc: "‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶¶‡¶ø‡¶® ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡ßÉ‡¶§ ‡¶∏‡¶π‡¶ú ‡¶ì ‡¶¶‡¶∞‡¶ï‡¶æ‡¶∞‡¶ø ‡¶ü‡ßÅ‡¶≤ ‡¶Ø‡ßá‡¶Æ‡¶® ‡¶ï‡¶®‡¶≠‡¶æ‡¶∞‡ßç‡¶ü‡¶æ‡¶∞, ‡¶ï‡ßç‡¶Ø‡¶æ‡¶≤‡¶ï‡ßÅ‡¶≤‡ßá‡¶ü‡¶∞ ‡¶á‡¶§‡ßç‡¶Ø‡¶æ‡¶¶‡¶ø‡•§",
  },
  {
    title: "Developer & Designer Tools",
    url: "dev-designer-tools/",
    desc: "JS, HTML, CSS ‡¶ï‡ßã‡¶° ‡¶∏‡ßÅ‡¶®‡ßç‡¶¶‡¶∞‡¶≠‡¶æ‡¶¨‡ßá ‡¶∏‡¶æ‡¶ú‡¶æ‡¶® ‡¶ì ‡¶¨‡¶ø‡¶∂‡ßç‡¶≤‡ßá‡¶∑‡¶£ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§",
  },
  {
    title: "BD Localized Special Tools",
    url: "bd-Localized-Special-tools/",
    desc: "‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡¶¶‡ßá‡¶∂ ‡¶≠‡¶ø‡¶§‡ßç‡¶§‡¶ø‡¶ï ‡¶™‡ßç‡¶∞‡ßü‡ßã‡¶ú‡¶®‡ßÄ‡ßü ‡¶ü‡ßÅ‡¶≤ ‡¶Ø‡ßá‡¶Æ‡¶® ‡¶è‡¶®‡¶Ü‡¶á‡¶°‡¶ø ‡¶Ø‡¶æ‡¶ö‡¶æ‡¶á, BRTC ‡¶§‡¶•‡ßç‡¶Ø ‡¶á‡¶§‡ßç‡¶Ø‡¶æ‡¶¶‡¶ø‡•§",
  },
  // ‡¶Ü‡¶∞‡¶ì ‡¶è‡¶≠‡¶æ‡¶¨‡ßá ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶∏‡¶¨ ‡¶™‡ßá‡¶ú ‡¶¨‡¶æ ‡¶ü‡ßÅ‡¶≤ ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶¨‡ßá‡¶®
];

const searchInput = document.getElementById("searchInput");
const searchBtn = document.getElementById("searchBtn");
const searchPopup = document.getElementById("searchPopup");
const closePopup = document.getElementById("closePopup");
const searchResults = document.getElementById("searchResults");

// ‡¶∏‡¶æ‡¶∞‡ßç‡¶ö ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
function doSearch() {
  const query = searchInput.value.trim().toLowerCase();
  searchResults.innerHTML = "";

  if (!query) {
    searchResults.innerHTML = "<p>‡¶Ö‡¶®‡ßÅ‡¶ó‡ßç‡¶∞‡¶π ‡¶ï‡¶∞‡ßá ‡¶∏‡¶æ‡¶∞‡ßç‡¶ö ‡¶ï‡¶∞‡ßÅ‡¶®‡•§</p>";
    return;
  }

  // ‡¶´‡¶ø‡¶≤‡ßç‡¶ü‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá ‡¶∞‡ßá‡¶ú‡¶æ‡¶≤‡ßç‡¶ü ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡¶æ
  const results = siteContent.filter(item =>
    item.title.toLowerCase().includes(query) ||
    item.desc.toLowerCase().includes(query)
  );

  if (results.length === 0) {
    searchResults.innerHTML = "<p>‡¶ï‡ßã‡¶®‡ßã ‡¶´‡¶≤‡¶æ‡¶´‡¶≤ ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º‡¶®‡¶ø‡•§</p>";
  } else {
    // ‡¶∞‡ßá‡¶ú‡¶æ‡¶≤‡ßç‡¶ü ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®‡ßã
    results.forEach(item => {
      const p = document.createElement("p");
      p.textContent = item.title;
      p.title = item.desc;
      p.onclick = () => {
        window.location.href = item.url;
      };
      searchResults.appendChild(p);
    });
  }
}

// event listeners
searchBtn.addEventListener("click", () => {
  doSearch();
  searchPopup.classList.remove("hidden");
});

closePopup.addEventListener("click", () => {
  searchPopup.classList.add("hidden");
});

// ‡¶á‡¶®‡¶™‡ßÅ‡¶ü‡ßá ‡¶è‡¶®‡ßç‡¶ü‡¶æ‡¶∞ ‡¶ö‡¶æ‡¶™‡¶≤‡ßá ‡¶∏‡¶æ‡¶∞‡ßç‡¶ö ‡¶π‡¶¨‡ßá
searchInput.addEventListener("keypress", (e) => {
  if (e.key === "Enter") {
    doSearch();
    searchPopup.classList.remove("hidden");
  }
});
